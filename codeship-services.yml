version: "3.3"
services:
  db:
    image: postgres:10.0-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: gis_user123
  redis:
    container_name: redis
    image: redis:5.0.6-alpine
    ports:
      - "6379:6379"
    entrypoint: redis-server --appendonly yes
    restart: always
  rabbitmq:
    image: rabbitmq:3.8.0-alpine
    command: rabbitmq-server
    expose:
      - 5672
      - 15672
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 5s
      timeout: 15s
      retries: 1
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.16
    container_name: elastic
    environment:
      - node.name=es01
      - http.host=0.0.0.0
    ports:
      - "9200"
  web:
    build:
      context: .
      dockerfile: Dockerfile-codeship
    environment:
      DJANGO_SETTINGS_MODULE: gis_project.settings.test
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
      - elastic
  celery:
    build:
      context: .
      dockerfile: Dockerfile-codeship
    command: celery -A gis_project worker -l info
    environment:
      DJANGO_SETTINGS_MODULE: gis_project.settings.test
    depends_on:
      - db
      - redis
      - rabbitmq
